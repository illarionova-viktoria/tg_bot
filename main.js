import {Telegraf, Markup} from 'telegraf';
import {message} from "telegraf/filters";
import config from "config";
import {Loader} from "./loader.js";
import {chatGPT} from "./chatgbt.js";




const token = config.get('TELEGRAM_TOKEN') //–≤ –∏–¥–µ–∞–ª–µ —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥, —á—Ç–æ–±—ã –≤—Å–µ —ç—Ç–æ –≤—ã–Ω–µ—Å—Ç–∏
const webAppUrl = 'https://tg-app-3786c.web.app'

const bot = new Telegraf(token)

bot.command('start', (ctx) => {
    ctx.reply(
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –ø—É—Ç–Ω–∏–∫ –≤ —ç—Ç–æ–º —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–µ.üçÄ' +
        '–¢—ã –º–æ–∂–µ—à—å –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É Open app –∏ –ø—Ä–æ–≤–∞–ª–∏—Ç—å—Å—è –≤ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ mini –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.‚ö°Ô∏è' +
        '–ï—â–µ —Ç—ã –º–æ–∂–µ—à—å –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É /puk –∏ —É–∑–Ω–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç. –ê –µ—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–∑–Ω–∞—Ç—å –º–∞–≥–∏—é, —Ç–æ –Ω–∞–ø–∏—à–∏ 3 —Å–ª–æ–≤–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –∏ —è —Å–æ–∑–¥–∞–º –∏—Å—Ç–æ—Ä–∏—é ü™ÑüîÆ',
        Markup.keyboard([
            Markup.button.webApp(
                '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ', webAppUrl + '/feedback')
        ])
    )
})

bot.command('puk',(ctx)=> {
    ctx.reply(
        '–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å?',
        Markup.inlineKeyboard([
            Markup.button.callback("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å", "look"),
            Markup.button.callback("–ü–æ–∫–∞–∫–∞—Ç—å", "poop"),]
        )
    )
})

bot.action("look", (ctx) => {
    // ctx.editMessageReplyMarkup();
    ctx.editMessageText("—Å–º–æ—Ç—Ä–∏");
});

bot.action("poop", (ctx) => {
    // ctx.editMessageReplyMarkup();
    ctx.editMessageText("–∫–∞–∫–∞–π");
});

bot.on(message('text'), async (ctx) => {
    try {
        const text = ctx.message.text

        if (!text.trim()) ctx.reply('–¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º')

        const loader = new Loader(ctx)

        await loader.show()

        const response = await chatGPT(text)

        if (!response) return ctx.reply('–û—à–∏–±–∫–∞ —Å API', response)

        loader.hide()

        ctx.reply(`–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è: ${response.content}`)
    } catch (e) {
        console.log('Error while proccessing text: ', e.message)
    }
})


bot.on(message('web_app_data'), async ctx => {
    const data = ctx.webAppData.data.json();
    ctx.reply(`–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ${data.feedback}` ?? 'empty message');
})

bot.launch()

